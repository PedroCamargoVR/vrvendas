package br.com.pedrocamargo.vrvendas.view;

import br.com.pedrocamargo.vrvendas.controller.ClienteController;
import br.com.pedrocamargo.vrvendas.controller.ProdutoController;
import br.com.pedrocamargo.vrvendas.controller.VendaController;
import br.com.pedrocamargo.vrvendas.model.ClienteModel;
import br.com.pedrocamargo.vrvendas.model.ProdutoModel;
import java.awt.BorderLayout;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import util.ExibirJanelaUtil;
import util.GerarTabelaUtil;
import util.SwingUtils;


public class NovaVendaView extends javax.swing.JInternalFrame {
    
    private ClienteController clienteController;
    private ProdutoController produtoController;
    private VendaController vendaController;
    private String[] nomeColunas = {"ID", "Descricao", "Quantidade", "Unidade", "Total", "Estoque Atual"};
    private GerarTabelaUtil gerarTabela = new GerarTabelaUtil(nomeColunas,false);
    private boolean isEdicaoProduto;
    private Integer produtoEmEdicao;
    
   public NovaVendaView() {
       this.clienteController = new ClienteController();
       this.produtoController = new ProdutoController();
       this.vendaController = new VendaController();
       vendaController.criarNovaVenda();
       initComponents();
       iniciarTabela();
       this.isEdicaoProduto = false;
    }
   
   public NovaVendaView(VendaController venda) {
       this.clienteController = new ClienteController();
       this.produtoController = new ProdutoController();
       this.vendaController = venda;
       initComponents();
       iniciarTabela();
       SwingUtils.populaCamposCliente(
                jtfVendaIdCliente,
                jtfVendaClienteNome,
                jtfVendaNomeFantasia,
                jtfVendaRazaoSocial,
                jtfVendaCnpj,
                venda.getVendaAtual().getId_cliente(),
                clienteController
               );
       this.isEdicaoProduto = false;
       this.setTitle("Venda Numero: " + vendaController.getVendaAtual().getId() + " | Situação da Venda: " + vendaController.getVendaAtual().getStatus());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpVendaBotoes = new javax.swing.JPanel();
        jbVendaSalvar = new javax.swing.JButton();
        jbVendaConferirEstoque = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jpVendaFormulario = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfVendaProdutoId = new javax.swing.JTextField();
        jtfVendaProdutoDescricao = new javax.swing.JTextField();
        jbPesquisaProduto = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jtfVendaIdCliente = new javax.swing.JTextField();
        jbPesquisaCliente = new javax.swing.JButton();
        jtfVendaClienteNome = new javax.swing.JTextField();
        jlVendaRazaoSocial = new javax.swing.JLabel();
        jtfVendaRazaoSocial = new javax.swing.JTextField();
        jtfVendaNomeFantasia = new javax.swing.JTextField();
        jlVendaNomeFantasia = new javax.swing.JLabel();
        jtfVendaCnpj = new javax.swing.JTextField();
        jlVendaCnpj = new javax.swing.JLabel();
        jlVendaTipoEmbalagem = new javax.swing.JLabel();
        jtfVendaTipoEmbalagem = new javax.swing.JTextField();
        jtfVendaEstoqueAtual = new javax.swing.JTextField();
        jlVendaEstoqueAtual = new javax.swing.JLabel();
        jtfVendaQuantidade = new javax.swing.JTextField();
        jlVendaQuantidade = new javax.swing.JLabel();
        jbVendaEditarProduto = new javax.swing.JButton();
        jbVendaRemoverProduto = new javax.swing.JButton();
        jlNomeCliente = new javax.swing.JLabel();
        jlDescricaoProduto = new javax.swing.JLabel();
        jbVendaAddProduto = new javax.swing.JButton();
        lbTotalLabel = new javax.swing.JLabel();
        jlTotalValor = new javax.swing.JLabel();
        jpTabelaProdutosInseridos = new javax.swing.JPanel();

        setClosable(true);
        setTitle("Lançamento de Venda");
        setPreferredSize(new java.awt.Dimension(730, 600));

        jbVendaSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/salvar.png"))); // NOI18N
        jbVendaSalvar.setText("Salvar");
        jbVendaSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVendaSalvarActionPerformed(evt);
            }
        });

        jbVendaConferirEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conferir.png"))); // NOI18N
        jbVendaConferirEstoque.setText("Atualizar Produtos");
        jbVendaConferirEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVendaConferirEstoqueActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalizar.png"))); // NOI18N
        jButton1.setText("Finalizar");

        javax.swing.GroupLayout jpVendaBotoesLayout = new javax.swing.GroupLayout(jpVendaBotoes);
        jpVendaBotoes.setLayout(jpVendaBotoesLayout);
        jpVendaBotoesLayout.setHorizontalGroup(
            jpVendaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVendaBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbVendaSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbVendaConferirEstoque)
                .addContainerGap())
        );
        jpVendaBotoesLayout.setVerticalGroup(
            jpVendaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVendaBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpVendaBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbVendaSalvar)
                    .addComponent(jbVendaConferirEstoque)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Produto");

        jtfVendaProdutoId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfVendaProdutoIdFocusLost(evt);
            }
        });

        jtfVendaProdutoDescricao.setEnabled(false);

        jbPesquisaProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pesquisa-16.png"))); // NOI18N
        jbPesquisaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisaProdutoActionPerformed(evt);
            }
        });

        jLabel2.setText("Cliente");

        jtfVendaIdCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfVendaIdClienteFocusLost(evt);
            }
        });
        jtfVendaIdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfVendaIdClienteActionPerformed(evt);
            }
        });

        jbPesquisaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pesquisa-16.png"))); // NOI18N
        jbPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisaClienteActionPerformed(evt);
            }
        });

        jtfVendaClienteNome.setEnabled(false);

        jlVendaRazaoSocial.setText("Razão Social");

        jtfVendaRazaoSocial.setEnabled(false);
        jtfVendaRazaoSocial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfVendaRazaoSocialActionPerformed(evt);
            }
        });

        jtfVendaNomeFantasia.setEnabled(false);
        jtfVendaNomeFantasia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfVendaNomeFantasiaActionPerformed(evt);
            }
        });

        jlVendaNomeFantasia.setText("Nome Fantasia");

        jtfVendaCnpj.setEnabled(false);
        jtfVendaCnpj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfVendaCnpjActionPerformed(evt);
            }
        });

        jlVendaCnpj.setText("CNPJ");

        jlVendaTipoEmbalagem.setText("Tipo Embalagem");

        jtfVendaTipoEmbalagem.setEnabled(false);
        jtfVendaTipoEmbalagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfVendaTipoEmbalagemActionPerformed(evt);
            }
        });

        jtfVendaEstoqueAtual.setEnabled(false);
        jtfVendaEstoqueAtual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfVendaEstoqueAtualActionPerformed(evt);
            }
        });

        jlVendaEstoqueAtual.setText("Estoque Atual");

        jtfVendaQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfVendaQuantidadeActionPerformed(evt);
            }
        });

        jlVendaQuantidade.setText("Quantidade");

        jbVendaEditarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editar-16.png"))); // NOI18N
        jbVendaEditarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVendaEditarProdutoActionPerformed(evt);
            }
        });

        jbVendaRemoverProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remove-16.png"))); // NOI18N
        jbVendaRemoverProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVendaRemoverProdutoActionPerformed(evt);
            }
        });

        jlNomeCliente.setText("Nome");

        jlDescricaoProduto.setText("Descrição");

        jbVendaAddProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adicionarabaixo-16.png"))); // NOI18N
        jbVendaAddProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVendaAddProdutoActionPerformed(evt);
            }
        });

        lbTotalLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTotalLabel.setText("Total: ");

        jlTotalValor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlTotalValor.setForeground(new java.awt.Color(0, 153, 51));
        jlTotalValor.setText("R$ 0,00");

        javax.swing.GroupLayout jpVendaFormularioLayout = new javax.swing.GroupLayout(jpVendaFormulario);
        jpVendaFormulario.setLayout(jpVendaFormularioLayout);
        jpVendaFormularioLayout.setHorizontalGroup(
            jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlVendaCnpj)
                    .addComponent(jtfVendaCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfVendaNomeFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlVendaNomeFantasia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlVendaRazaoSocial)
                            .addComponent(jtfVendaRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                        .addComponent(jlVendaTipoEmbalagem)
                        .addGap(31, 31, 31)
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlVendaEstoqueAtual)
                            .addComponent(jtfVendaEstoqueAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlVendaQuantidade)
                            .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                                .addComponent(jtfVendaQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbTotalLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlTotalValor)))
                        .addGap(52, 52, 52)
                        .addComponent(jbVendaAddProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbVendaEditarProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbVendaRemoverProduto))
                    .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                                .addComponent(jtfVendaIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jbPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                                .addComponent(jlNomeCliente)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jtfVendaClienteNome)))
                    .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jtfVendaTipoEmbalagem, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpVendaFormularioLayout.createSequentialGroup()
                                    .addComponent(jtfVendaProdutoId, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(2, 2, 2)
                                    .addComponent(jbPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                                .addComponent(jlDescricaoProduto)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jtfVendaProdutoDescricao))))
                .addContainerGap())
        );
        jpVendaFormularioLayout.setVerticalGroup(
            jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jlNomeCliente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfVendaIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jtfVendaClienteNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisaCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfVendaNomeFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfVendaRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6))
                    .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlVendaNomeFantasia)
                            .addComponent(jlVendaRazaoSocial))
                        .addGap(32, 32, 32)))
                .addComponent(jlVendaCnpj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfVendaCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jlDescricaoProduto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtfVendaProdutoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtfVendaProdutoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jbPesquisaProduto))
                        .addGap(16, 16, 16)
                        .addComponent(jlVendaTipoEmbalagem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfVendaTipoEmbalagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpVendaFormularioLayout.createSequentialGroup()
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlVendaEstoqueAtual)
                            .addComponent(jlVendaQuantidade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpVendaFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfVendaEstoqueAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfVendaQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTotalLabel)
                            .addComponent(jlTotalValor)))
                    .addComponent(jbVendaEditarProduto)
                    .addComponent(jbVendaRemoverProduto)
                    .addComponent(jbVendaAddProduto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpTabelaProdutosInseridosLayout = new javax.swing.GroupLayout(jpTabelaProdutosInseridos);
        jpTabelaProdutosInseridos.setLayout(jpTabelaProdutosInseridosLayout);
        jpTabelaProdutosInseridosLayout.setHorizontalGroup(
            jpTabelaProdutosInseridosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jpTabelaProdutosInseridosLayout.setVerticalGroup(
            jpTabelaProdutosInseridosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 182, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpVendaBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpVendaFormulario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpTabelaProdutosInseridos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpVendaBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpVendaFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpTabelaProdutosInseridos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciarTabela(){
        gerarTabela.limparTabela();
        
        Map<ProdutoModel, Integer> produtosSelecionados = (LinkedHashMap) vendaController.getVendaAtual().getProdutosSelecionados();
        
        produtosSelecionados.forEach((produto,quantidade) -> {
            gerarTabela.addLinha(new String[]{
                produto.getId().toString(), 
                produto.getDescricao(), 
                quantidade.toString(),
                produto.getUnidade(),
                produto.getPreco().multiply(new BigDecimal(quantidade)).toString(),
                produto.getEstoque().toString()});
        });
        
        jpTabelaProdutosInseridos.setLayout(new BorderLayout());
        jpTabelaProdutosInseridos.add(gerarTabela.getScrollPane(), BorderLayout.CENTER);
        jpTabelaProdutosInseridos.setVisible(true);
        jpTabelaProdutosInseridos.revalidate();
        jpTabelaProdutosInseridos.repaint();
         
        jlTotalValor.setText(vendaController.getValorTotalVenda().toString());
        jlTotalValor.revalidate();
        jlTotalValor.repaint();
    }
    
    private void jtfVendaIdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfVendaIdClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfVendaIdClienteActionPerformed

    private void jtfVendaRazaoSocialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfVendaRazaoSocialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfVendaRazaoSocialActionPerformed

    private void jtfVendaNomeFantasiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfVendaNomeFantasiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfVendaNomeFantasiaActionPerformed

    private void jtfVendaCnpjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfVendaCnpjActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfVendaCnpjActionPerformed

    private void jbPesquisaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisaProdutoActionPerformed
        ConsultaProdutosView consultaProduto = new ConsultaProdutosView(this);
        ExibirJanelaUtil.abrirFormulario(consultaProduto, super.getDesktopPane());
    }//GEN-LAST:event_jbPesquisaProdutoActionPerformed

    private void jtfVendaTipoEmbalagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfVendaTipoEmbalagemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfVendaTipoEmbalagemActionPerformed

    private void jtfVendaEstoqueAtualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfVendaEstoqueAtualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfVendaEstoqueAtualActionPerformed

    private void jtfVendaQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfVendaQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfVendaQuantidadeActionPerformed

    private void jbVendaEditarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVendaEditarProdutoActionPerformed
     
        Map<String,String> dadosLinhaSelecionada = gerarTabela.dadosLinhaSelecionada();
        
        if(dadosLinhaSelecionada.isEmpty()){
             JOptionPane.showMessageDialog(null, "Nenhum registro selecionado.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }else{
            SwingUtils.popularCamposProduto(
                jtfVendaProdutoId,
                jtfVendaProdutoDescricao,
                jtfVendaTipoEmbalagem,
                jtfVendaEstoqueAtual,
                Integer.parseInt(dadosLinhaSelecionada.get("ID")),
                produtoController
            );
            jtfVendaQuantidade.setText(dadosLinhaSelecionada.get("Quantidade"));
            isEdicaoProduto = true;
            jbVendaEditarProduto.setEnabled(false);
            produtoEmEdicao = Integer.parseInt(dadosLinhaSelecionada.get("ID"));
        }
    }//GEN-LAST:event_jbVendaEditarProdutoActionPerformed

    private void jbVendaRemoverProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVendaRemoverProdutoActionPerformed
        if(vendaController.getVendaAtual().getIdsProdutosSelecionados().size() <= 1){
            JOptionPane.showMessageDialog(null, "A venda deve ter ao menos um produto!", "Erro", JOptionPane.ERROR_MESSAGE);
        }else if(!isEdicaoProduto){
            Map<String,String> dadosLinhaSelecionada = gerarTabela.dadosLinhaSelecionada();
        
            if(dadosLinhaSelecionada.isEmpty()){
                 JOptionPane.showMessageDialog(null, "Nenhum registro selecionado.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }else{
                 int resposta = JOptionPane.showConfirmDialog(null,"Tem certeza que deseja remover o produto da venda?\n",
                 "Confirmação",JOptionPane.YES_NO_OPTION);
                   if(resposta == JOptionPane.YES_OPTION){
                     try {
                         vendaController.getVendaAtual().removerProduto(produtoController.getProdutoById(Integer.parseInt(dadosLinhaSelecionada.get("ID"))));
                         iniciarTabela();
                     } catch (SQLException ex) {
                         JOptionPane.showMessageDialog(null, "Erro ao remover produto da venda", "Erro", JOptionPane.ERROR_MESSAGE);
                     }
                   }
               }
        }else{
            JOptionPane.showMessageDialog(null, "Não é possível remover um produto enquanto está editando um produto", "Erro", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jbVendaRemoverProdutoActionPerformed

    private void jtfVendaIdClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfVendaIdClienteFocusLost
        if(!jtfVendaIdCliente.getText().isEmpty()){
            try{
                Integer id = Integer.parseInt(jtfVendaIdCliente.getText());
                SwingUtils.populaCamposCliente(
                jtfVendaIdCliente,
                jtfVendaClienteNome,
                jtfVendaNomeFantasia,
                jtfVendaRazaoSocial,
                jtfVendaCnpj,
                clienteController.getClienteById(id)
               );
            }
            catch(SQLException | NullPointerException eSql){
                JOptionPane.showMessageDialog(null, "Cliente não encontrado", "Erro", JOptionPane.WARNING_MESSAGE);
                SwingUtils.limpaCamposCliente(
                    jtfVendaIdCliente,
                    jtfVendaClienteNome,
                    jtfVendaNomeFantasia,
                    jtfVendaRazaoSocial,
                    jtfVendaCnpj
                );
            }
            catch(Exception e){
                 JOptionPane.showMessageDialog(null, "Você deve digitar um numero", "Erro", JOptionPane.ERROR_MESSAGE);
                 SwingUtils.limpaCamposCliente(
                    jtfVendaIdCliente,
                    jtfVendaClienteNome,
                    jtfVendaNomeFantasia,
                    jtfVendaRazaoSocial,
                    jtfVendaCnpj
                );
            }
        }
    }//GEN-LAST:event_jtfVendaIdClienteFocusLost

    private void jbPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisaClienteActionPerformed
        ConsultaClienteView consultaCliente = new ConsultaClienteView(this);
        ExibirJanelaUtil.abrirFormulario(consultaCliente, super.getDesktopPane());
    }//GEN-LAST:event_jbPesquisaClienteActionPerformed

    private void jbVendaAddProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVendaAddProdutoActionPerformed
        if(isEdicaoProduto){
            if(!jtfVendaProdutoId.getText().isEmpty()){
                try {
                    Integer quantidade = Integer.parseInt(jtfVendaQuantidade.getText());
                    if(Integer.parseInt(jtfVendaProdutoId.getText()) == produtoEmEdicao){
                        vendaController.getVendaAtual().editarQuantidadeProduto(produtoController.getProdutoById(Integer.parseInt(jtfVendaProdutoId.getText())), quantidade);
                    }else{
                        vendaController.getVendaAtual().editarProduto(
                                produtoController.getProdutoById(produtoEmEdicao), 
                                produtoController.getProdutoById(Integer.parseInt(jtfVendaProdutoId.getText())), 
                                quantidade);
                    }
                    SwingUtils.limpaCamposProduto(
                        jtfVendaProdutoId,
                        jtfVendaProdutoDescricao,
                        jtfVendaTipoEmbalagem,
                        jtfVendaEstoqueAtual
                    );
                    jtfVendaQuantidade.setText("");
                    iniciarTabela();
                    this.isEdicaoProduto = false;
                    jbVendaEditarProduto.setEnabled(true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Produto não encontrado", "Erro", JOptionPane.WARNING_MESSAGE);
                } catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Erro ao inserir produto na venda", "Erro", JOptionPane.WARNING_MESSAGE);
                }
            }
        }else{
            if(!jtfVendaProdutoId.getText().isEmpty()){
            try {
                Integer quantidade = Integer.parseInt(jtfVendaQuantidade.getText());
                vendaController.getVendaAtual().adicionarProduto(produtoController.getProdutoById(Integer.parseInt(jtfVendaProdutoId.getText())), quantidade);
                SwingUtils.limpaCamposProduto(
                    jtfVendaProdutoId,
                    jtfVendaProdutoDescricao,
                    jtfVendaTipoEmbalagem,
                    jtfVendaEstoqueAtual
                );
                jtfVendaQuantidade.setText("");
                iniciarTabela();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Produto não encontrado", "Erro", JOptionPane.WARNING_MESSAGE);
            } catch(Exception e){
                JOptionPane.showMessageDialog(null, "Erro ao inserir produto na venda", "Erro", JOptionPane.WARNING_MESSAGE);
            }
        }
        }
    }//GEN-LAST:event_jbVendaAddProdutoActionPerformed

    private void jtfVendaProdutoIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfVendaProdutoIdFocusLost
        if(!jtfVendaProdutoId.getText().isEmpty()){
            try{
                Integer id = Integer.parseInt(jtfVendaProdutoId.getText());
                SwingUtils.popularCamposProduto(
                    jtfVendaProdutoId,
                    jtfVendaProdutoDescricao,
                    jtfVendaTipoEmbalagem,
                    jtfVendaEstoqueAtual,
                    produtoController.getProdutoById(id)
                );
            }
            catch(SQLException | NullPointerException eSql){
                JOptionPane.showMessageDialog(null, "Produto não encontrado", "Erro", JOptionPane.WARNING_MESSAGE);
                SwingUtils.limpaCamposProduto(
                    jtfVendaProdutoId,
                    jtfVendaProdutoDescricao,
                    jtfVendaTipoEmbalagem,
                    jtfVendaEstoqueAtual
                );
            }
            catch(Exception e){
                 JOptionPane.showMessageDialog(null, "Você deve digitar um numero", "Erro", JOptionPane.ERROR_MESSAGE);
                 SwingUtils.limpaCamposProduto(
                    jtfVendaProdutoId,
                    jtfVendaProdutoDescricao,
                    jtfVendaTipoEmbalagem,
                    jtfVendaEstoqueAtual
                );
            }
        }
    }//GEN-LAST:event_jtfVendaProdutoIdFocusLost

    private void jbVendaConferirEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVendaConferirEstoqueActionPerformed
        try {
            produtoController.sincronizarProdutosApiBdLocal();
            vendaController.atualizaEstoqueProdutosVendaAtual();
            iniciarTabela();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao sincronizar estoque atual", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbVendaConferirEstoqueActionPerformed

    private void jbVendaSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVendaSalvarActionPerformed
        if(jtfVendaIdCliente.getText().isEmpty() || jtfVendaIdCliente.getText() == null){
            JOptionPane.showMessageDialog(null, "Preencha o campo cliente", "Erro", JOptionPane.WARNING_MESSAGE);
        }else if(vendaController.getVendaAtual().getProdutosSelecionados().size() == 0){
            JOptionPane.showMessageDialog(null, "A venda deve ter ao menos um produto", "Erro", JOptionPane.WARNING_MESSAGE);
        }else{
            try {
                vendaController.getVendaAtual().setIdCliente(Integer.parseInt(jtfVendaIdCliente.getText()));
                vendaController.getVendaAtual().setIdStatus(1);
                Integer idVendaInserida = vendaController.salvarVenda(vendaController.getVendaAtual());
                
                NovaVendaView novaView = new NovaVendaView(new VendaController(vendaController.getVendaById(idVendaInserida)));
                ExibirJanelaUtil.abrirFormulario(novaView, super.getDesktopPane());
                this.dispose();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao salvar venda\n"+ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbVendaSalvarActionPerformed
        
    public void popularCamposProduto(Integer id){
        SwingUtils.popularCamposProduto(jtfVendaProdutoId, jtfVendaProdutoDescricao, jtfVendaTipoEmbalagem, jtfVendaEstoqueAtual, id, produtoController);
    }
    
    public void populaCamposCliente(Integer id){
        SwingUtils.populaCamposCliente(jtfVendaIdCliente, jtfVendaClienteNome, jtfVendaNomeFantasia, jtfVendaRazaoSocial, jtfVendaCnpj, id, clienteController);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbPesquisaCliente;
    private javax.swing.JButton jbPesquisaProduto;
    private javax.swing.JButton jbVendaAddProduto;
    private javax.swing.JButton jbVendaConferirEstoque;
    private javax.swing.JButton jbVendaEditarProduto;
    private javax.swing.JButton jbVendaRemoverProduto;
    private javax.swing.JButton jbVendaSalvar;
    private javax.swing.JLabel jlDescricaoProduto;
    private javax.swing.JLabel jlNomeCliente;
    private javax.swing.JLabel jlTotalValor;
    private javax.swing.JLabel jlVendaCnpj;
    private javax.swing.JLabel jlVendaEstoqueAtual;
    private javax.swing.JLabel jlVendaNomeFantasia;
    private javax.swing.JLabel jlVendaQuantidade;
    private javax.swing.JLabel jlVendaRazaoSocial;
    private javax.swing.JLabel jlVendaTipoEmbalagem;
    private javax.swing.JPanel jpTabelaProdutosInseridos;
    private javax.swing.JPanel jpVendaBotoes;
    private javax.swing.JPanel jpVendaFormulario;
    private javax.swing.JTextField jtfVendaClienteNome;
    private javax.swing.JTextField jtfVendaCnpj;
    private javax.swing.JTextField jtfVendaEstoqueAtual;
    private javax.swing.JTextField jtfVendaIdCliente;
    private javax.swing.JTextField jtfVendaNomeFantasia;
    private javax.swing.JTextField jtfVendaProdutoDescricao;
    private javax.swing.JTextField jtfVendaProdutoId;
    private javax.swing.JTextField jtfVendaQuantidade;
    private javax.swing.JTextField jtfVendaRazaoSocial;
    private javax.swing.JTextField jtfVendaTipoEmbalagem;
    private javax.swing.JLabel lbTotalLabel;
    // End of variables declaration//GEN-END:variables
}
